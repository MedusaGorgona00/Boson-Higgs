name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      HOSTNAME: ${{secrets.SSH_HOST}}
      USER_NAME: ${{secrets.USER_NAME}}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.LATEST_IMAGE}} .
        docker push ${{ secrets.LATEST_IMAGE}}

    - name: Deploy to EC2
      run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 507095017304.dkr.ecr.us-east-1.amazonaws.com \
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} 'cd /home/ec2-user/ && \
          docker pull ${{ secrets.LATEST_IMAGE}} && \
          docker-compose -f docker-compose.api.yml up -d --force-recreate'
        


